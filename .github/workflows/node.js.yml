name: Build, SonarQube Scan, and Push Docker Image

on:
  push:
    branches:
      - main  # Change to master or main based on your branch
  pull_request:
    branches:
      - main  # Change to master or main based on your branch

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # This ensures the full history is available for SonarQube analysis

      # Step 2: Setup SonarQube Scan 
      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Your SonarQube token
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # SonarQube host URL
          SONAR_TOKEN: sqp_be59d78473eaa7bae51b017c883217b18ed333bc   # Your SonarQube token
          SONAR_HOST_URL: http://20.77.25.135:9000/   # SonarQube host URL          
 
      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          

      # Step 3: Build Docker Image with Commit ID as tag
      - name: Build Docker image
        run: |
          COMMIT_ID=$(git rev-parse --short HEAD)  # Get the short commit hash
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/nodejs-hello-world:$COMMIT_ID"
          echo "Building Docker image with tag: $IMAGE_TAG"
          docker build . --file Dockerfile --tag $IMAGE_TAG

      # Debugging: List Docker images
      - name: List Docker images
        run: |
          docker images

      # Step 4: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          COMMIT_ID=$(git rev-parse --short HEAD)  # Get the short commit hash
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/nodejs-hello-world:$COMMIT_ID"
          echo "Pushing Docker image with tag: $IMAGE_TAG"
          docker push $IMAGE_TAG
